using System.Diagnostics;
using Core.Exceptions;

namespace Core {
    //This class excecutes the scripts. 
    public class ScriptRunner :IScriptRunner {
        
        //This method starts a new process where the script is executet and returns the output. 
        //Param: 
        //ScriptId: a script id. 
        //ScriptPath: the path to the script.
        //interpreterPath: the path to the interpreter. 
        public string RunScript(string scriptId, string scriptPath, string interpreterPath) {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = interpreterPath;
            start.Arguments = string.Format("\"{0}\" \"{1}\"", scriptPath, null);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start)) {
                string result = process.StandardOutput.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                //if standard output is not empty it is returned. 
                if (result.Length != 0) {
                    return result;
                } else {
                    string errors = process.StandardError.ReadToEnd(); // Here are the exceptions from our script
                    throw new ScriptFailedException(scriptId, errors);
                }
            }
        }
    }
}
